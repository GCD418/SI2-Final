{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-ucb-sisinfo-7268517"
		},
		"sa_distribuidora_raw_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sa_distribuidora_raw'"
		},
		"sql_dw_distribuidora_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'sql_dw_distribuidora'"
		},
		"sql_dw_distribuidora_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-ucb-sisinfo-7268517.database.windows.net"
		},
		"sql_dw_distribuidora_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "dw-distribuidora"
		},
		"sql_dw_distribuidora_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "gabriel"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_PL_clientes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "BRONZE_df_clientes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/BRONZE_df_clientes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_PL_clientes_bd_gen')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "BRONZE_df_clientes_bd_gen",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/BRONZE_df_clientes_bd_gen')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_PL_clientes_location')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "BRONZE_df_clientes_location",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/BRONZE_df_clientes_location')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_PL_detalle_ventas')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "BRONZE_df_detalle_ventas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/BRONZE_df_detalle_ventas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_PL_productos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "BRONZE_df_productos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/BRONZE_df_productos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_PL_productos_cat_mant')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "BRONZE_df_productos_cat_mant",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/BRONZE_df_productos_cat_mant')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clientes_BD_GEN_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sa_distribuidora_raw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Clientes_BD-GEN.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CID",
						"type": "String"
					},
					{
						"name": "BDATE",
						"type": "String"
					},
					{
						"name": "GEN",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sa_distribuidora_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Clientes_location_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sa_distribuidora_raw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Clientes_location.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CID",
						"type": "String"
					},
					{
						"name": "CNTRY",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sa_distribuidora_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Detalle_ventas_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sa_distribuidora_raw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Detalle_ventas.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "sls_ord_num",
						"type": "String"
					},
					{
						"name": "sls_prd_key",
						"type": "String"
					},
					{
						"name": "sls_cust_id",
						"type": "String"
					},
					{
						"name": "sls_order_dt",
						"type": "String"
					},
					{
						"name": "sls_ship_dt",
						"type": "String"
					},
					{
						"name": "sls_sales",
						"type": "String"
					},
					{
						"name": "sls_quantity",
						"type": "String"
					},
					{
						"name": "sls_price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sa_distribuidora_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Productos_cat_mant_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sa_distribuidora_raw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Productos_CAT_MANT.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "CAT",
						"type": "String"
					},
					{
						"name": "SUBCAT",
						"type": "String"
					},
					{
						"name": "MAINTENANCE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sa_distribuidora_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Productos_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sa_distribuidora_raw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Productos.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "prd_id",
						"type": "String"
					},
					{
						"name": "prd_key",
						"type": "String"
					},
					{
						"name": "prd_nm",
						"type": "String"
					},
					{
						"name": "prd_cost",
						"type": "String"
					},
					{
						"name": "prd_line",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sa_distribuidora_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_clients')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_distribuidora",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "client_id",
						"type": "varchar"
					},
					{
						"name": "firstname",
						"type": "varchar"
					},
					{
						"name": "lastname",
						"type": "varchar"
					},
					{
						"name": "marital_status",
						"type": "varchar"
					},
					{
						"name": "gender",
						"type": "varchar"
					},
					{
						"name": "birth_date",
						"type": "date"
					},
					{
						"name": "location",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "SILVER",
					"table": "Clients"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_distribuidora')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_products')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_distribuidora",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "product_key",
						"type": "varchar"
					},
					{
						"name": "cost",
						"type": "int",
						"precision": 10
					},
					{
						"name": "category",
						"type": "varchar"
					},
					{
						"name": "sub_category",
						"type": "varchar"
					},
					{
						"name": "product_name",
						"type": "varchar"
					},
					{
						"name": "maintenance",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "SILVER",
					"table": "Products"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_distribuidora')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_sales_detail')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_distribuidora",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SILVER"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "sale_id",
						"type": "varchar"
					},
					{
						"name": "order_number",
						"type": "varchar"
					},
					{
						"name": "product_key",
						"type": "varchar"
					},
					{
						"name": "client_id",
						"type": "varchar"
					},
					{
						"name": "order_date",
						"type": "date"
					},
					{
						"name": "ship_date",
						"type": "date"
					},
					{
						"name": "days_difference",
						"type": "int",
						"precision": 10
					},
					{
						"name": "quantity",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "SILVER",
					"table": "Sales_detail"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_distribuidora')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_sql_clientes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_distribuidora",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "cst_id",
						"type": "varchar"
					},
					{
						"name": "cst_key",
						"type": "varchar"
					},
					{
						"name": "cst_firstname",
						"type": "varchar"
					},
					{
						"name": "cst_lastname",
						"type": "varchar"
					},
					{
						"name": "cst_marital_status",
						"type": "varchar"
					},
					{
						"name": "cst_gndr",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "Clientes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_distribuidora')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_sql_clientes_bd_gen')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_distribuidora",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CID",
						"type": "varchar"
					},
					{
						"name": "BDATE",
						"type": "varchar"
					},
					{
						"name": "GEN",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "Clientes_BD_GEN"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_distribuidora')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_sql_clientes_location')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_distribuidora",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CID",
						"type": "varchar"
					},
					{
						"name": "CNTRY",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "Clientes_location"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_distribuidora')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_sql_detalle_ventas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_distribuidora",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "sls_ord_num",
						"type": "varchar"
					},
					{
						"name": "sls_prd_key",
						"type": "varchar"
					},
					{
						"name": "sls_cust_id",
						"type": "varchar"
					},
					{
						"name": "sls_order_dt",
						"type": "varchar"
					},
					{
						"name": "sls_ship_dt",
						"type": "varchar"
					},
					{
						"name": "sls_sales",
						"type": "varchar"
					},
					{
						"name": "sls_quantity",
						"type": "varchar"
					},
					{
						"name": "sls_price",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "Detalle_ventas"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_distribuidora')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_sql_productos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_distribuidora",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "prd_id",
						"type": "varchar"
					},
					{
						"name": "prd_key",
						"type": "varchar"
					},
					{
						"name": "prd_nm",
						"type": "varchar"
					},
					{
						"name": "prd_cost",
						"type": "varchar"
					},
					{
						"name": "prd_line",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "Productos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_distribuidora')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronze_sql_productos_cat_mant')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_dw_distribuidora",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "varchar"
					},
					{
						"name": "CAT",
						"type": "varchar"
					},
					{
						"name": "SUBCAT",
						"type": "varchar"
					},
					{
						"name": "MAINTENANCE",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BRONZE",
					"table": "Productos_Cat_Mant"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sql_dw_distribuidora')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/clientes_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sa_distribuidora_raw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "BRONZE"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Clientes.csv",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "cst_id",
						"type": "String"
					},
					{
						"name": "cst_key",
						"type": "String"
					},
					{
						"name": "cst_firstname",
						"type": "String"
					},
					{
						"name": "cst_lastname",
						"type": "String"
					},
					{
						"name": "cst_marital_status",
						"type": "String"
					},
					{
						"name": "cst_gndr",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sa_distribuidora_raw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sa_distribuidora_raw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('sa_distribuidora_raw_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_dw_distribuidora')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('sql_dw_distribuidora_properties_typeProperties_server')]",
					"database": "[parameters('sql_dw_distribuidora_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('sql_dw_distribuidora_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('sql_dw_distribuidora_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_df_clientes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "clientes_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "bronze_sql_clientes",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          cst_id as string,",
						"          cst_key as string,",
						"          cst_firstname as string,",
						"          cst_lastname as string,",
						"          cst_marital_status as string,",
						"          cst_gndr as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          cst_id as string,",
						"          cst_key as string,",
						"          cst_firstname as string,",
						"          cst_lastname as string,",
						"          cst_marital_status as string,",
						"          cst_gndr as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          cst_id,",
						"          cst_key,",
						"          cst_firstname,",
						"          cst_lastname,",
						"          cst_marital_status,",
						"          cst_gndr",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/clientes_csv')]",
				"[concat(variables('factoryId'), '/datasets/bronze_sql_clientes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_df_clientes_bd_gen')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Clientes_BD_GEN_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "bronze_sql_clientes_bd_gen",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          CID as string,",
						"          BDATE as string,",
						"          GEN as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CID as string,",
						"          BDATE as string,",
						"          GEN as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CID,",
						"          BDATE,",
						"          GEN",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Clientes_BD_GEN_csv')]",
				"[concat(variables('factoryId'), '/datasets/bronze_sql_clientes_bd_gen')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_df_clientes_location')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Clientes_location_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "bronze_sql_clientes_location",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          CID as string,",
						"          CNTRY as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CID as string,",
						"          CNTRY as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          CID,",
						"          CNTRY",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Clientes_location_csv')]",
				"[concat(variables('factoryId'), '/datasets/bronze_sql_clientes_location')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_df_detalle_ventas')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Detalle_ventas_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "bronze_sql_detalle_ventas",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          sls_ord_num as string,",
						"          sls_prd_key as string,",
						"          sls_cust_id as string,",
						"          sls_order_dt as string,",
						"          sls_ship_dt as string,",
						"          sls_sales as string,",
						"          sls_quantity as string,",
						"          sls_price as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          sls_ord_num as string,",
						"          sls_prd_key as string,",
						"          sls_cust_id as string,",
						"          sls_order_dt as string,",
						"          sls_ship_dt as string,",
						"          sls_sales as string,",
						"          sls_quantity as string,",
						"          sls_price as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          sls_ord_num,",
						"          sls_prd_key,",
						"          sls_cust_id,",
						"          sls_order_dt,",
						"          sls_ship_dt,",
						"          sls_sales,",
						"          sls_quantity,",
						"          sls_price",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Detalle_ventas_csv')]",
				"[concat(variables('factoryId'), '/datasets/bronze_sql_detalle_ventas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_df_productos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Productos_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "bronze_sql_productos",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          prd_id as string,",
						"          prd_key as string,",
						"          prd_nm as string,",
						"          prd_cost as string,",
						"          prd_line as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          prd_id as string,",
						"          prd_key as string,",
						"          prd_nm as string,",
						"          prd_cost as string,",
						"          prd_line as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          prd_id,",
						"          prd_key,",
						"          prd_nm,",
						"          prd_cost,",
						"          prd_line",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Productos_csv')]",
				"[concat(variables('factoryId'), '/datasets/bronze_sql_productos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRONZE_df_productos_cat_mant')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "BRONZE"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Productos_cat_mant_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "bronze_sql_productos_cat_mant",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          ID as string,",
						"          CAT as string,",
						"          SUBCAT as string,",
						"          MAINTENANCE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as string,",
						"          CAT as string,",
						"          SUBCAT as string,",
						"          MAINTENANCE as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID,",
						"          CAT,",
						"          SUBCAT,",
						"          MAINTENANCE",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Productos_cat_mant_csv')]",
				"[concat(variables('factoryId'), '/datasets/bronze_sql_productos_cat_mant')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Silver_df_clients')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "SILVER"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "bronze_sql_clientes",
								"type": "DatasetReference"
							},
							"name": "clientes"
						},
						{
							"dataset": {
								"referenceName": "bronze_sql_clientes_bd_gen",
								"type": "DatasetReference"
							},
							"name": "clientesBdGen"
						},
						{
							"dataset": {
								"referenceName": "bronze_sql_clientes_location",
								"type": "DatasetReference"
							},
							"name": "clientesLocation"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Silver_clients",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "explainMaritalStatus"
						},
						{
							"name": "trimNames"
						},
						{
							"name": "unifyId"
						},
						{
							"name": "unifyClientId"
						},
						{
							"name": "cast1"
						},
						{
							"name": "join1"
						},
						{
							"name": "join2"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          client_id as string,",
						"          firstname as string,",
						"          lastname as string,",
						"          marital_status as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT cst_id AS client_id,\\ncst_firstname AS firstname,\\ncst_lastname AS lastname,\\ncst_marital_status AS marital_status\\nFROM BRONZE.Clientes',",
						"     format: 'query') ~> clientes",
						"source(output(",
						"          client_id as string,",
						"          birth_date as string,",
						"          gender as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT CID AS client_id,\\nBDATE AS birth_date,\\nGEN AS gender\\nFROM BRONZE.Clientes_BD_GEN',",
						"     format: 'query') ~> clientesBdGen",
						"source(output(",
						"          client_id as string,",
						"          location as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'SELECT CID AS client_id,\\nCNTRY AS location\\nFROM BRONZE.Clientes_location',",
						"     format: 'query') ~> clientesLocation",
						"clientes derive(marital_status = iif(isNull(marital_status) || marital_status == '', 'unknown',",
						"    iif(marital_status == 'M', 'married',",
						"        iif(marital_status == 'S', 'single', marital_status)",
						"    )",
						")) ~> explainMaritalStatus",
						"explainMaritalStatus derive(firstname = trim(firstname),",
						"          lastname = trim(lastname)) ~> trimNames",
						"clientesBdGen derive(client_id = right(client_id, 5)) ~> unifyId",
						"clientesLocation derive(client_id = right(client_id, 5),",
						"          location = iif(isNull(location) || trim(location) == '', 'unknown',",
						"    iif(location == 'US' || location == 'USA', 'United States',",
						"        iif(location == 'DE', 'Germany', location)",
						"    )",
						")) ~> unifyClientId",
						"unifyId cast(output(",
						"          birth_date as date 'yyyy-MM-dd'",
						"     ),",
						"     errors: true) ~> cast1",
						"trimNames, cast1 join(clientes@client_id == unifyId@client_id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1, unifyClientId join(clientes@client_id == unifyClientId@client_id,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join2",
						"join2 select(mapColumn(",
						"          client_id = clientes@client_id,",
						"          firstname,",
						"          lastname,",
						"          marital_status,",
						"          birth_date,",
						"          gender,",
						"          location",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          client_id as string,",
						"          firstname as string,",
						"          lastname as string,",
						"          marital_status as string,",
						"          gender as string,",
						"          birth_date as date,",
						"          location as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          client_id,",
						"          firstname,",
						"          lastname,",
						"          marital_status,",
						"          gender,",
						"          birth_date,",
						"          location",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/bronze_sql_clientes')]",
				"[concat(variables('factoryId'), '/datasets/bronze_sql_clientes_bd_gen')]",
				"[concat(variables('factoryId'), '/datasets/bronze_sql_clientes_location')]",
				"[concat(variables('factoryId'), '/datasets/Silver_clients')]"
			]
		}
	]
}